Mws is written in Objective Caml (ocaml), a dialect of the ML family. 

- Getting started in Ocaml
We recommend having at least basic familiarity with ocaml (or another
ML-derived language) prior to starting out in mws. There are many great
resources available to learn ocaml (XXX web pointer); two excellent ones in
particular are:

a) The (XXX find name and link) 'Oreilly book' is an elegant and
well-structured book, with both introductory and advanced material. (a good
read through chapters 2, 3, and 4 should be sufficient to get started in
mws). 

b) R. Jones online tutorial introduces ocaml by comparing and contrasting it
with c and java. This one is slightly less 'principled' than the O'Reilly
book - take a look at both and see what feels most comfortable!


- Prerequisites
To compile and run mws, you must have ocaml installed. The latest version of
ocaml (3.07+2) is recommended (though mws should run fine on prior 3.0* ocaml
releases). The official site to get ocaml is http://caml.inria.fr.

In order to build and use the gui functionality, you must also install
lablgtk. Lablgtk is available from XXXX.


- Using mws

interactive vs batch:

Mws can be used either in interactive or in scripted mode. In interactive
mode, the user enters commands at the ocaml prompt to tell mws what to do.
In batch mode, a binary is compiled with all the simulation script included;
the simulation then runs unattended. 

Each mode has its own advantages: the interactive mode is useful to test
script commands without a cumbersome edit/compile/debug cycle; the batch mode
runs significantly faster (because binaries can be compiled to native code
for a roughly 3-10x speedup compared to interactive bytecode).

Note that since the exact same commands can be run in interactive and batch
mode, a common development model is to experiment with scripts interactively, 
and then use these scripts for long-running, performance-intensive simulations
in batch mode.


Tutorial








- Developing under mws